From 065e9f0eee96ccb300790140fd35fba3944f9b39 Mon Sep 17 00:00:00 2001
From: Alexandru Costache <alexandru@balena.io>
Date: Fri, 30 Nov 2018 21:17:13 +0200
Subject: [PATCH] Adapted scripts for Balena usage

Removed configurations that are not necessary on
the Balena platform for now and were triggering
warnings and errors at startup.

Brought in the implementation needed for bringing
up usb ethernet managed by NetworkManager.

Upstream-status: Inaproppriate[configuration]
Signed-off-by: Alexandru Costache <alexandru@balena.io>
---
 boot/am335x_evm.sh      | 620 +++---------------------------------------------
 boot/generic-startup.sh |   4 +-
 2 files changed, 31 insertions(+), 593 deletions(-)

diff --git a/boot/am335x_evm.sh b/boot/am335x_evm.sh
index b124105..de717db 100755
--- a/boot/am335x_evm.sh
+++ b/boot/am335x_evm.sh
@@ -23,42 +23,8 @@
 #Based off:
 #https://github.com/beagleboard/meta-beagleboard/blob/master/meta-beagleboard-extras/recipes-support/usb-gadget/gadget-init/g-ether-load.sh
 
-disable_connman_dnsproxy () {
-	if [ -f /lib/systemd/system/connman.service ] ; then
-		#netstat -tapnd
-		unset check_connman
-		check_connman=$(cat /lib/systemd/system/connman.service | grep ExecStart | grep nodnsproxy || true)
-		if [ "x${check_connman}" = "x" ] ; then
-			systemctl stop connman.service || true
-			sed -i -e 's:connmand -n:connmand -n --nodnsproxy:g' /lib/systemd/system/connman.service || true
-			systemctl daemon-reload || true
-			systemctl start connman.service || true
-		fi
-	fi
-}
-
-if [ -f /etc/rcn-ee.conf ] ; then
-	. /etc/rcn-ee.conf
-fi
-
-if [ -f /etc/default/bb-boot ] ; then
-	unset USB_NETWORK_DISABLED
-	. /etc/default/bb-boot
-fi
-
 log="am335x_evm:"
 
-unset detected_capes
-detected_capes=$(cat /proc/cmdline | sed 's/ /\n/g' | grep uboot_detected_capes= || true)
-if [ ! "x${detected_capes}" = "x" ] ; then
-	got_DLPDLCR2000=$(echo ${detected_capes} | grep DLPDLCR2000 || true)
-	if [ ! "x${got_DLPDLCR2000}" = "x" ] ; then
-		echo "${log} found: DLPDLCR2000 init display"
-		i2cset -y 2 0x1b 0x0b 0x00 0x00 0x00 0x00 i || true
-		i2cset -y 2 0x1b 0x0c 0x00 0x00 0x00 0x1b i || true
-	fi
-fi
-
 usb_gadget="/sys/kernel/config/usb_gadget"
 
 #  idVendor           0x1d6b Linux Foundation
@@ -73,175 +39,11 @@ usb_bcdUSB="0x0200"
 usb_serialnr="000000"
 usb_product="USB Device"
 
-#usb0 mass_storage
-usb_ms_cdrom=0
-usb_ms_ro=1
-usb_ms_stall=0
-usb_ms_removable=1
-usb_ms_nofua=1
-
-#legacy support of: 2014-05-14 (now taken care by the init flasher)
-if [ "x${abi}" = "x" ] ; then
-	$(dirname $0)/legacy/write_eeprom.sh || true
-fi
-
-cleanup_extra_docs () {
-	#recovers 82MB of space
-	if [ -d /var/cache/doc-beaglebonegreen-getting-started ] ; then
-		echo "${log} Cleaning up: /var/cache/doc-beaglebonegreen-getting-started"
-		rm -rf /var/cache/doc-beaglebonegreen-getting-started || true
-	fi
-	if [ -d /var/cache/doc-seeed-bbgw-getting-started ] ; then
-		echo "${log} Cleaning up: /var/cache/doc-seeed-bbgw-getting-started"
-		rm -rf /var/cache/doc-seeed-bbgw-getting-started || true
-	fi
-}
-
-#original user:
-usb_image_file="/var/local/usb_mass_storage.img"
-
-#*.iso priority over *.img
-if [ -f /var/local/bb_usb_mass_storage.iso ] ; then
-	usb_image_file="/var/local/bb_usb_mass_storage.iso"
-elif [ -f /var/local/bb_usb_mass_storage.img ] ; then
-	usb_image_file="/var/local/bb_usb_mass_storage.img"
-fi
-
-unset dnsmasq_usb0_usb1
-unset blue_fix_uarts
-
-board=$(cat /proc/device-tree/model | sed "s/ /_/g" | tr -d '\000')
-case "${board}" in
-TI_AM335x_BeagleBone)
-	has_wifi="disable"
-	cleanup_extra_docs
-	dnsmasq_usb0_usb1="enable"
-	;;
-TI_AM335x_BeagleBone_Black)
-	has_wifi="disable"
-	cleanup_extra_docs
-	dnsmasq_usb0_usb1="enable"
-	;;
-TI_AM335x_BeagleBone_Black_Wireless)
-	has_wifi="enable"
-	#recovers 82MB of space
-	cleanup_extra_docs
-	;;
-TI_AM335x_BeagleBone_Blue)
-	has_wifi="enable"
-	cleanup_extra_docs
-#	blue_fix_uarts="enable"
-	;;
-TI_AM335x_BeagleBone_Green)
-	has_wifi="disable"
-	unset board_bbgw
-	unset board_sbbe
-	dnsmasq_usb0_usb1="enable"
-	;;
-TI_AM335x_BeagleBone_Green_Wireless)
-	board_bbgw="enable"
-	has_wifi="enable"
-	;;
-TI_AM335x_BeagleLogic_Standalone)
-	has_wifi="disable"
-	dnsmasq_usb0_usb1="enable"
-	;;
-TI_AM335x_P*)
-	has_wifi="disable"
-	cleanup_extra_docs
-	dnsmasq_usb0_usb1="enable"
-	;;
-SanCloud_BeagleBone_Enhanced)
-	board_sbbe="enable"
-	has_wifi="enable"
-	cleanup_extra_docs
-	;;
-Octavo_Systems_OSD3358*)
-	has_wifi="disable"
-	cleanup_extra_docs
-	dnsmasq_usb0_usb1="enable"
-	;;
-TI_AM335x_BeagleBone_Black_RoboticsCape)
-	has_wifi="disable"
-	cleanup_extra_docs
-	dnsmasq_usb0_usb1="enable"
-	;;
-TI_AM335x_BeagleBone_Black_Wireless_RoboticsCape)
-	has_wifi="enable"
-	#recovers 82MB of space
-	cleanup_extra_docs
-	;;
-*)
-	has_wifi="disable"
-	unset board_bbgw
-	unset board_sbbe
-	;;
-esac
-
-if [ ! "x${usb_image_file}" = "x" ] ; then
-	echo "${log} usb_image_file=[`readlink -f ${usb_image_file}`]"
-fi
-
 usb_iserialnumber="1234BBBK5678"
-ISBLACK=""
-ISGREEN=""
 usb_iproduct="am335x_evm"
 usb_imanufacturer="BeagleBoard.org"
 wifi_prefix="BeagleBone"
 
-#pre nvmem...
-eeprom="/sys/bus/i2c/devices/0-0050/eeprom"
-if [ -f ${eeprom} ] && [ -f /usr/bin/hexdump ] ; then
-	usb_iserialnumber=$(hexdump -e '8/1 "%c"' ${eeprom} -n 28 | cut -b 17-28)
-	ISBLACK=$(hexdump -e '8/1 "%c"' ${eeprom} -n 12 | cut -b 9-12)
-	ISGREEN=$(hexdump -e '8/1 "%c"' ${eeprom} -n 19 | cut -b 17-19)
-	ISBLACKVARIENT=$(hexdump -e '8/1 "%c"' ${eeprom} -n 16 | cut -b 13-16)
-fi
-
-#[PATCH (pre v8) 0/9] Add simple NVMEM Framework via regmap.
-eeprom="/sys/class/nvmem/at24-0/nvmem"
-if [ -f ${eeprom} ] && [ -f /usr/bin/hexdump ] ; then
-	usb_iserialnumber=$(hexdump -e '8/1 "%c"' ${eeprom} -n 28 | cut -b 17-28)
-	ISBLACK=$(hexdump -e '8/1 "%c"' ${eeprom} -n 12 | cut -b 9-12)
-	ISGREEN=$(hexdump -e '8/1 "%c"' ${eeprom} -n 19 | cut -b 17-19)
-	ISBLACKVARIENT=$(hexdump -e '8/1 "%c"' ${eeprom} -n 16 | cut -b 13-16)
-fi
-
-#[PATCH v8 0/9] Add simple NVMEM Framework via regmap.
-eeprom="/sys/bus/nvmem/devices/at24-0/nvmem"
-if [ -f ${eeprom} ] && [ -f /usr/bin/hexdump ] ; then
-	usb_iserialnumber=$(hexdump -e '8/1 "%c"' ${eeprom} -n 28 | cut -b 17-28)
-	ISBLACK=$(hexdump -e '8/1 "%c"' ${eeprom} -n 12 | cut -b 9-12)
-	ISGREEN=$(hexdump -e '8/1 "%c"' ${eeprom} -n 19 | cut -b 17-19)
-	ISBLACKVARIENT=$(hexdump -e '8/1 "%c"' ${eeprom} -n 16 | cut -b 13-16)
-fi
-
-usb_iproduct="BeagleBone"
-if [ "x${ISBLACK}" = "xBBBK" ] || [ "x${ISBLACK}" = "xBNLT" ] ; then
-	if [ "x${ISGREEN}" = "xBBG" ] ; then
-		usb_imanufacturer="Seeed"
-		usb_iproduct="BeagleBoneGreen"
-	else
-		#FIXME: should be a case statement, on the next varient..
-		if [ "x${ISBLACKVARIENT}" = "xGW1A" ] ; then
-			usb_imanufacturer="Seeed"
-			usb_iproduct="BeagleBoneGreenWireless"
-		else
-			if [ "x$board_sbbe" = "xenable" ] ; then
-				usb_imanufacturer="SanCloud"
-				usb_iproduct="BeagleBoneEnhanced"
-			else
-				usb_iproduct="BeagleBoneBlack"
-			fi
-		fi
-	fi
-fi
-
-if [ "x${ISBLACK}" = "xBLGC" ] ; then
-	usb_imanufacturer="BeagleLogic"
-	usb_iproduct="BeagleLogicStandalone"
-fi
-
 #mac address:
 #cpsw_0_mac = eth0 - wlan0 (in eeprom)
 #cpsw_1_mac = usb0 (BeagleBone Side) (in eeprom)
@@ -264,20 +66,20 @@ else
 fi
 
 unset use_cached_cpsw_mac
-if [ -f /etc/cpsw_0_mac ] ; then
+if [ -f /tmp/cpsw_0_mac ] ; then
 	unset test_cpsw_0_mac
-	test_cpsw_0_mac=$(cat /etc/cpsw_0_mac)
+	test_cpsw_0_mac=$(cat /tmp/cpsw_0_mac)
 	if [ "x${cpsw_0_mac}" = "x${test_cpsw_0_mac}" ] ; then
 		use_cached_cpsw_mac="true"
 	else
-		echo "${cpsw_0_mac}" > /etc/cpsw_0_mac || true
+		echo "${cpsw_0_mac}" > /tmp/cpsw_0_mac || true
 	fi
 else
-	echo "${cpsw_0_mac}" > /etc/cpsw_0_mac || true
+	echo "${cpsw_0_mac}" > /tmp/cpsw_0_mac || true
 fi
 
-if [ "x${use_cached_cpsw_mac}" = "xtrue" ] && [ -f /etc/cpsw_1_mac ] ; then
-	cpsw_1_mac=$(cat /etc/cpsw_1_mac)
+if [ "x${use_cached_cpsw_mac}" = "xtrue" ] && [ -f /tmp/cpsw_1_mac ] ; then
+	cpsw_1_mac=$(cat /tmp/cpsw_1_mac)
 else
 	mac_address="/proc/device-tree/ocp/ethernet@4a100000/slave@4a100300/mac-address"
 	if [ -f ${mac_address} ] && [ -f /usr/bin/hexdump ] ; then
@@ -297,16 +99,16 @@ else
 				cpsw_1_mac="1C:BA:8C:A2:ED:70"
 			fi
 		fi
-		echo "${cpsw_1_mac}" > /etc/cpsw_1_mac || true
+		echo "${cpsw_1_mac}" > /tmp/cpsw_1_mac || true
 	else
 		#todo: generate random mac...
 		cpsw_1_mac="1C:BA:8C:A2:ED:70"
-		echo "${cpsw_1_mac}" > /etc/cpsw_1_mac || true
+		echo "${cpsw_1_mac}" > /tmp/cpsw_1_mac || true
 	fi
 fi
 
-if [ "x${use_cached_cpsw_mac}" = "xtrue" ] && [ -f /etc/cpsw_2_mac ] ; then
-	cpsw_2_mac=$(cat /etc/cpsw_2_mac)
+if [ "x${use_cached_cpsw_mac}" = "xtrue" ] && [ -f /tmp/cpsw_2_mac ] ; then
+	cpsw_2_mac=$(cat /tmp/cpsw_2_mac)
 else
 	if [ -f /usr/bin/bc ] ; then
 		mac_0_prefix=$(echo ${cpsw_0_mac} | cut -c 1-14)
@@ -387,11 +189,11 @@ else
 			;;
 		esac
 	fi
-	echo "${cpsw_2_mac}" > /etc/cpsw_2_mac || true
+	echo "${cpsw_2_mac}" > /tmp/cpsw_2_mac || true
 fi
 
-if [ "x${use_cached_cpsw_mac}" = "xtrue" ] && [ -f /etc/cpsw_3_mac ] ; then
-	cpsw_3_mac=$(cat /etc/cpsw_3_mac)
+if [ "x${use_cached_cpsw_mac}" = "xtrue" ] && [ -f /tmp/cpsw_3_mac ] ; then
+	cpsw_3_mac=$(cat /tmp/cpsw_3_mac)
 else
 	if [ -f /usr/bin/bc ] ; then
 		mac_0_prefix=$(echo ${cpsw_0_mac} | cut -c 1-14)
@@ -404,80 +206,14 @@ else
 	else
 		cpsw_3_mac="1C:BA:8C:A2:ED:71"
 	fi
-	echo "${cpsw_3_mac}" > /etc/cpsw_3_mac || true
-fi
-
-if [ "x${use_cached_cpsw_mac}" = "xtrue" ] && [ -f /etc/cpsw_4_mac ] ; then
-	cpsw_4_mac=$(cat /etc/cpsw_4_mac)
-else
-	if [ -f /usr/bin/bc ] ; then
-		mac_0_prefix=$(echo ${cpsw_0_mac} | cut -c 1-14)
-
-		cpsw_0_6=$(echo ${cpsw_0_mac} | awk -F ':' '{print $6}')
-		#bc cuts off leading zero's, we need ten/ones value
-		cpsw_res=$(echo "obase=16;ibase=16;$cpsw_0_6 + 104" | bc)
-
-		cpsw_4_mac=${mac_0_prefix}:$(echo ${cpsw_res} | cut -c 2-3)
-	else
-		cpsw_4_mac="1C:BA:8C:A2:ED:72"
-	fi
-	echo "${cpsw_4_mac}" > /etc/cpsw_4_mac || true
+	echo "${cpsw_3_mac}" > /tmp/cpsw_3_mac || true
 fi
 
-if [ "x${use_cached_cpsw_mac}" = "xtrue" ] && [ -f /etc/cpsw_5_mac ] ; then
-	cpsw_5_mac=$(cat /etc/cpsw_5_mac)
-else
-	if [ -f /usr/bin/bc ] ; then
-		mac_0_prefix=$(echo ${cpsw_0_mac} | cut -c 1-14)
-
-		cpsw_0_6=$(echo ${cpsw_0_mac} | awk -F ':' '{print $6}')
-		#bc cuts off leading zero's, we need ten/ones value
-		cpsw_res=$(echo "obase=16;ibase=16;$cpsw_0_6 + 105" | bc)
-
-		cpsw_5_mac=${mac_0_prefix}:$(echo ${cpsw_res} | cut -c 2-3)
-	else
-		cpsw_5_mac="1C:BA:8C:A2:ED:73"
-	fi
-	echo "${cpsw_5_mac}" > /etc/cpsw_5_mac || true
-fi
 
 echo "${log} cpsw_0_mac: [${cpsw_0_mac}]"
 echo "${log} cpsw_1_mac: [${cpsw_1_mac}]"
 echo "${log} cpsw_2_mac: [${cpsw_2_mac}]"
 echo "${log} cpsw_3_mac: [${cpsw_3_mac}]"
-echo "${log} cpsw_4_mac: [${cpsw_4_mac}]"
-echo "${log} cpsw_5_mac: [${cpsw_5_mac}]"
-
-if [ -f /var/lib/connman/settings ] ; then
-	wifi_name=$(grep Tethering.Identifier= /var/lib/connman/settings | awk -F '=' '{print $2}' || true)
-
-	#Dont blindly, change Tethering.Identifier as user may have changed it, just match ${wifi_prefix}
-	if [ "x${wifi_name}" = "x${wifi_prefix}" ] ; then
-		ssid_append=$(echo ${cpsw_0_mac} | cut -b 13-17 | sed 's/://g' || true)
-		if [ ! "x${wifi_name}" = "x${wifi_prefix}-${ssid_append}" ] ; then
-			if [ ! "x${wifi_name}" = "x${wifi_prefix}-${ssid_append}" ] ; then
-				systemctl stop connman.service || true
-				sed -i -e 's:Tethering.Identifier='$wifi_name':Tethering.Identifier='$wifi_prefix'-'$ssid_append':g' /var/lib/connman/settings
-				systemctl daemon-reload || true
-				systemctl restart connman.service || true
-			fi
-		fi
-	fi
-
-	if [ -f /etc/systemd/system/network-online.target.wants/connman-wait-online.service ] ; then
-		systemctl disable connman-wait-online.service || true
-	fi
-fi
-
-#udhcpd gets started at bootup, but we need to wait till g_multi is loaded, and we run it manually...
-if [ -f /var/run/udhcpd.pid ] ; then
-	echo "${log} [/etc/init.d/udhcpd stop]"
-	/etc/init.d/udhcpd stop || true
-fi
-
-if [ ! -f /etc/systemd/system/getty.target.wants/serial-getty@ttyGS0.service ] ; then
-	ln -s /lib/systemd/system/serial-getty@.service /etc/systemd/system/getty.target.wants/serial-getty@ttyGS0.service
-fi
 
 run_libcomposite () {
 	if [ ! -d /sys/kernel/config/usb_gadget/g_multi/ ] ; then
@@ -516,28 +252,19 @@ run_libcomposite () {
 			# https://answers.microsoft.com/en-us/windows/forum/windows_10-networking-winpc/windows-10-vs-remote-ndis-ethernet-usbgadget-not/cb30520a-753c-4219-b908-ad3d45590447
 			# https://www.spinics.net/lists/linux-usb/msg107185.html
 			echo 1 > os_desc/use
-			echo CD > os_desc/b_vendor_code
+			echo 0xCD > os_desc/b_vendor_code
 			echo MSFT100 > os_desc/qw_sign
 			echo "RNDIS" > functions/rndis.usb0/os_desc/interface.rndis/compatible_id
 			echo "5162001" > functions/rndis.usb0/os_desc/interface.rndis/sub_compatible_id
 
-			mkdir -p functions/ecm.usb0
-			echo ${cpsw_4_mac} > functions/ecm.usb0/host_addr
-			echo ${cpsw_5_mac} > functions/ecm.usb0/dev_addr
+# Commented out to disable usb1 interface
+#			mkdir -p functions/ecm.usb0
+#			echo ${cpsw_4_mac} > functions/ecm.usb0/host_addr
+#			echo ${cpsw_5_mac} > functions/ecm.usb0/dev_addr
 		fi
 
 		mkdir -p functions/acm.usb0
 
-		if [ "x${has_img_file}" = "xtrue" ] ; then
-			echo "${log} enable USB mass_storage ${usb_image_file}"
-			mkdir -p functions/mass_storage.usb0
-			echo ${usb_ms_stall} > functions/mass_storage.usb0/stall
-			echo ${usb_ms_cdrom} > functions/mass_storage.usb0/lun.0/cdrom
-			echo ${usb_ms_nofua} > functions/mass_storage.usb0/lun.0/nofua
-			echo ${usb_ms_removable} > functions/mass_storage.usb0/lun.0/removable
-			echo ${usb_ms_ro} > functions/mass_storage.usb0/lun.0/ro
-			echo ${actual_image_file} > functions/mass_storage.usb0/lun.0/file
-		fi
 
 		mkdir -p configs/c.1/strings/0x409
 		echo "Multifunction with RNDIS" > configs/c.1/strings/0x409/configuration
@@ -554,12 +281,10 @@ run_libcomposite () {
 			echo "BeagleBone USB Ethernet" > functions/rndis.usb0/os_desc/interface.rndis/Label/data
 
 			ln -s functions/rndis.usb0 configs/c.1/
-			ln -s functions/ecm.usb0 configs/c.1/
+                        # disable usb1
+			#ln -s functions/ecm.usb0 configs/c.1/
 		fi
 		ln -s functions/acm.usb0 configs/c.1/
-		if [ "x${has_img_file}" = "xtrue" ] ; then
-			ln -s functions/mass_storage.usb0 configs/c.1/
-		fi
 
 		#ls /sys/class/udc
 		#v4.4.x-ti
@@ -573,7 +298,7 @@ run_libcomposite () {
 		fi
 
 		usb0="enable"
-		usb1="enable"
+		usb1="disable"
 		echo "${log} g_multi Created"
 	else
 		echo "${log} FIXME: need to bring down g_multi first, before running a second time."
@@ -582,44 +307,9 @@ run_libcomposite () {
 
 use_libcomposite () {
 	echo "${log} use_libcomposite"
-	unset has_img_file
-	if [ "x${USB_IMAGE_FILE_DISABLED}" = "xyes" ]; then
-		echo "${log} usb_image_file disabled by bb-boot config file."
-	elif [ -f ${usb_image_file} ] ; then
-		actual_image_file=$(readlink -f ${usb_image_file} || true)
-		if [ ! "x${actual_image_file}" = "x" ] ; then
-			if [ -f ${actual_image_file} ] ; then
-				has_img_file="true"
-				test_usb_image_file=$(echo ${actual_image_file} | grep .iso || true)
-				if [ ! "x${test_usb_image_file}" = "x" ] ; then
-					usb_ms_cdrom=1
-				fi
-			else
-				echo "${log} FIXME: no usb_image_file"
-			fi
-		else
-			echo "${log} FIXME: no usb_image_file"
-		fi
-	else
-		#We don't use a physical partition anymore...
-		unset root_drive
-		root_drive="$(cat /proc/cmdline | sed 's/ /\n/g' | grep root=UUID= | awk -F 'root=' '{print $2}' || true)"
-		if [ ! "x${root_drive}" = "x" ] ; then
-			root_drive="$(/sbin/findfs ${root_drive} || true)"
-		else
-			root_drive="$(cat /proc/cmdline | sed 's/ /\n/g' | grep root= | awk -F 'root=' '{print $2}' || true)"
-		fi
-
-		if [ "x${root_drive}" = "x/dev/mmcblk0p1" ] || [ "x${root_drive}" = "x/dev/mmcblk1p1" ] ; then
-			echo "${log} FIXME: no valid drive to share over usb"
-		else
-			actual_image_file="${root_drive%?}1"
-		fi
-	fi
 
 	#ls -lha /sys/kernel/*
 	#ls -lha /sys/kernel/config/*
-#	if [ ! -d /sys/kernel/config/usb_gadget/ ] ; then
 
 	echo "${log} modprobe libcomposite"
 	modprobe libcomposite || true
@@ -631,11 +321,6 @@ use_libcomposite () {
 		fi
 		echo "${log} ERROR: [libcomposite didn't load]"
 	fi
-
-#	echo
-#		echo "${log} libcomposite built-in"
-#		run_libcomposite
-#	fi
 }
 
 g_network="iSerialNumber=${usb_iserialnumber} iManufacturer=${usb_imanufacturer} iProduct=${usb_iproduct} host_addr=${cpsw_2_mac} dev_addr=${cpsw_1_mac}"
@@ -645,14 +330,6 @@ usb0_fail () {
 	modprobe g_serial || true
 }
 
-#update_initrd () {
-#	if [ ! -f /boot/initrd.img-$(uname -r) ] ; then
-#		update-initramfs -c -k $(uname -r)
-#	else
-#		update-initramfs -u -k $(uname -r)
-#	fi
-#}
-
 g_multi_retry () {
 	echo "info: [modprobe g_multi ${g_multi_options}] failed"
 #	update_initrd
@@ -671,53 +348,7 @@ g_serial_retry () {
 	modprobe g_serial || true
 }
 
-use_old_g_multi () {
-	echo "${log} use_old_g_multi"
-	#priorty:
-	#g_multi
-	#g_ether
-	#g_serial
-
-	#g_multi: Do we have image file?
-	if [ -f ${usb_image_file} ] ; then
-		test_usb_image_file=$(echo ${usb_image_file} | grep .iso || true)
-		if [ ! "x${test_usb_image_file}" = "x" ] ; then
-			usb_ms_cdrom=1
-		fi
-		g_multi_options="file=${usb_image_file} cdrom=${usb_ms_cdrom} ro=${usb_ms_ro}"
-		g_multi_options="${g_multi_options} stall=${usb_ms_stall} removable=${usb_ms_removable}"
-		g_multi_options="${g_multi_options} nofua=${usb_ms_nofua} ${g_network}}"
-		modprobe g_multi ${g_multi_options} || g_multi_retry
-		usb0="enable"
-	else
-		#g_multi: Do we have a non-rootfs "fat" partition?
-		unset root_drive
-		root_drive="$(cat /proc/cmdline | sed 's/ /\n/g' | grep root=UUID= | awk -F 'root=' '{print $2}' || true)"
-		if [ ! "x${root_drive}" = "x" ] ; then
-			root_drive="$(/sbin/findfs ${root_drive} || true)"
-		else
-			root_drive="$(cat /proc/cmdline | sed 's/ /\n/g' | grep root= | awk -F 'root=' '{print $2}' || true)"
-		fi
-
-		if [ "x${root_drive}" = "x/dev/mmcblk0p1" ] || [ "x${root_drive}" = "x/dev/mmcblk1p1" ] ; then
-			#g_ether: Do we have udhcpd/dnsmasq?
-			if [ -f /usr/sbin/udhcpd ] || [ -f /usr/sbin/dnsmasq ] ; then
-				modprobe g_ether ${g_network} || g_ether_retry
-				usb0="enable"
-			else
-				#g_serial: As a last resort...
-				modprobe g_serial || g_serial_retry
-			fi
-		else
-			boot_drive="${root_drive%?}1"
-			modprobe g_multi file=${boot_drive} cdrom=0 ro=0 stall=0 removable=1 nofua=1 ${g_network} || true
-			usb0="enable"
-		fi
-	fi
-}
-
 unset usb0 usb1
-
 #use libcomposite with v4.4.x+ kernel's...
 kernel_major=$(uname -r | cut -d. -f1 || true)
 kernel_minor=$(uname -r | cut -d. -f2 || true)
@@ -736,205 +367,10 @@ else
 	use_libcomposite
 fi
 
-if [ ! "x${USB_NETWORK_DISABLED}" = "xyes" ]; then
-	if [ -f /var/lib/misc/dnsmasq.leases ] ; then
-		systemctl stop dnsmasq || true
-		rm -rf /var/lib/misc/dnsmasq.leases || true
-	fi
-
-	if [ "x${usb0}" = "xenable" ] ; then
-		echo "${log} Starting usb0 network"
-		# Auto-configuring the usb0 network interface:
-		$(dirname $0)/autoconfigure_usb0.sh || true
-	fi
-
-	if [ "x${usb1}" = "xenable" ] ; then
-		echo "${log} Starting usb1 network"
-		# Auto-configuring the usb1 network interface:
-		$(dirname $0)/autoconfigure_usb1.sh || true
-	fi
-
-	if [ "x${dnsmasq_usb0_usb1}" = "xenable" ] ; then
-		if [ -d /sys/kernel/config/usb_gadget ] ; then
-			/etc/init.d/udhcpd stop || true
-
-			if [ -d /etc/dnsmasq.d/ ] ; then
-				echo "${log} dnsmasq: setting up for usb0/usb1"
-				disable_connman_dnsproxy
-
-				wfile="/etc/dnsmasq.d/SoftAp0"
-				echo "interface=usb0" > ${wfile}
-				echo "interface=usb1" >> ${wfile}
-				echo "port=53" >> ${wfile}
-				echo "dhcp-authoritative" >> ${wfile}
-				echo "domain-needed" >> ${wfile}
-				echo "bogus-priv" >> ${wfile}
-				echo "expand-hosts" >> ${wfile}
-				echo "cache-size=2048" >> ${wfile}
-				echo "dhcp-range=usb0,192.168.7.1,192.168.7.1,2m" >> ${wfile}
-				echo "dhcp-range=usb1,192.168.6.1,192.168.6.1,2m" >> ${wfile}
-				echo "listen-address=127.0.0.1" >> ${wfile}
-				echo "listen-address=192.168.7.2" >> ${wfile}
-				echo "listen-address=192.168.6.2" >> ${wfile}
-				echo "dhcp-option=usb0,3" >> ${wfile}
-				echo "dhcp-option=usb0,6" >> ${wfile}
-				echo "dhcp-option=usb1,3" >> ${wfile}
-				echo "dhcp-option=usb1,6" >> ${wfile}
-	#FIXME: why was this added, without connman every ip get's 172.1.8.1????
-	#			echo "address=/#/172.1.8.1" >> ${wfile}
-				echo "dhcp-leasefile=/var/run/dnsmasq.leases" >> ${wfile}
-
-				systemctl restart dnsmasq || true
-			else
-				echo "${log} ERROR: dnsmasq is not installed"
-			fi
-		fi
-	fi
-fi
-
-#create_ap is now legacy, use connman...
-if [ -f /usr/bin/create_ap ] ; then
-	if [ "x${has_wifi}" = "xenable" ] ; then
-		ifconfig wlan0 down
-		ifconfig wlan0 hw ether ${cpsw_0_mac}
-		ifconfig wlan0 up || true
-		echo "${cpsw_0_mac}" > /etc/wlan0-mac
-		systemctl start create_ap &
-	fi
-fi
-
-#Just Cleanup /etc/issue, systemd starts up tty before these are updated...
-sed -i -e '/Address/d' /etc/issue || true
-
-check_getty_tty=$(systemctl is-active serial-getty@ttyGS0.service || true)
-if [ "x${check_getty_tty}" = "xinactive" ] ; then
-	systemctl restart serial-getty@ttyGS0.service || true
-fi
-
-#legacy support of: 2014-05-14 (now taken care by the init flasher)
-if [ "x${abi}" = "x" ] ; then
-	$(dirname $0)/legacy/write_emmc.sh || true
-fi
-
-#legacy support of: 2014-05-14 (now taken care by the init flasher)
-if [ "x${abi}" = "x" ] ; then
-	$(dirname $0)/legacy/old_resize.sh || true
-fi
+# Since the update to NetworkManager 1.14.4
+# usb0 interface needs to have carrier and to
+# be marked as managed by NetworkManager
+ifconfig usb0 up
+/usr/bin/nmcli dev set usb0 managed yes

-#these are expected to be set by default...
-if [ "x${blue_fix_uarts}" = "xenable" ] ; then
-	if [ -f /usr/bin/config-pin ] ; then
-		test_config_pin=$(/usr/bin/config-pin -q P9.24 2>&1 | grep pinmux | sed "s/ /_/g" | sed "s/\!/_/g" | tr -d '\000' || true)
-		if [ "x${test_config_pin}x" = "xP9_24_pinmux_file_not_found_x" ] ; then
-			echo "${log} broken /usr/bin/config-pin upgrade bb-cape-overlays"
-		else
-			echo "${log} config-pin: GPS: Setting P9.21/P9.22 as: uart: [/dev/ttyS2]"
-			/usr/bin/config-pin P9.21 uart || true
-			/usr/bin/config-pin P9.22 uart || true
-			echo "${log} config-pin: UT1: Setting P9.24/P9.26 as: uart: [/dev/ttyS1]"
-			/usr/bin/config-pin P9.24 uart || true
-			/usr/bin/config-pin P9.26 uart || true
-		fi
-	fi
-fi
-
-unset enable_cape_universal
-enable_cape_universal=$(grep 'cape_universal=enable' /proc/cmdline || true)
-if [ ! "x${enable_cape_universal}" = "x" ] ; then
-	#loading cape-universal...
-	if [ -f /sys/devices/platform/bone_capemgr/slots ] ; then
-
-		#cape-universal Exports all pins not used by HDMIN and eMMC (including audio)
-		#cape-universaln Exports all pins not used by HDMI and eMMC (no audio pins are exported)
-		#cape-univ-emmc Exports pins used by eMMC, load if eMMC is disabled
-		#cape-univ-hdmi Exports pins used by HDMI video, load if HDMI is disabled
-		#cape-univ-audio Exports pins used by HDMI audio
-
-		unset stop_cape_load
-		#Make sure bone_capemgr.uboot_capemgr_enabled=1 wasn't passed to cmdline...
-		if [ "x${stop_cape_load}" = "x" ] ; then
-			check_enable_partno=$(grep bone_capemgr.uboot_capemgr_enabled=1 /proc/cmdline || true)
-			if [ ! "x${check_enable_partno}" = "x" ] ; then
-				stop_cape_load="stop"
-			fi
-		fi
-
-		#Make sure bone_capemgr.enable_partno wasn't passed to cmdline...
-		if [ "x${stop_cape_load}" = "x" ] ; then
-			check_enable_partno=$(grep bone_capemgr.enable_partno /proc/cmdline || true)
-			if [ ! "x${check_enable_partno}" = "x" ] ; then
-				stop_cape_load="stop"
-			fi
-		fi
-
-		#Make sure no custom overlays are loaded...
-		if [ "x${stop_cape_load}" = "x" ] ; then
-			check_cape_loaded=$(cat /sys/devices/platform/bone_capemgr/slots | awk '{print $3}' | grep 0 | tail -1 || true)
-			if [ ! "x${check_cape_loaded}" = "x" ] ; then
-				stop_cape_load="stop"
-			fi
-		fi
-
-		#Make sure we load the correct overlay based on lack/custom dtb's...
-		if [ "x${stop_cape_load}" = "x" ] ; then
-			unset overlay
-			check_dtb=$(cat /boot/uEnv.txt | grep -v '#' | grep dtb | tail -1 | awk -F '=' '{print $2}' || true)
-			if [ ! "x${check_dtb}" = "x" ] ; then
-				case "${check_dtb}" in
-				am335x-boneblack-overlay.dtb)
-					overlay="univ-all"
-					;;
-				am335x-boneblack-emmc-overlay.dtb)
-					overlay="univ-emmc"
-					;;
-				am335x-boneblack-hdmi-overlay.dtb)
-					overlay="univ-hdmi"
-					;;
-				am335x-boneblack-nhdmi-overlay.dtb)
-					overlay="univ-nhdmi"
-					;;
-				am335x-bonegreen-overlay.dtb)
-					overlay="univ-all"
-					;;
-				esac
-			else
-				machine=$(cat /proc/device-tree/model | sed "s/ /_/g" | tr -d '\000')
-				case "${machine}" in
-				TI_AM335x_BeagleBone)
-					overlay="univ-all"
-					;;
-				TI_AM335x_BeagleBone_Black_Wireless)
-					overlay="cape-universal"
-					;;
-				TI_AM335x_BeagleBone_Blue)
-					unset overlay
-					;;
-				TI_AM335x_BeagleBone_Black)
-					overlay="cape-universal"
-					;;
-				TI_AM335x_BeagleBone_Green)
-					overlay="univ-emmc"
-					;;
-				TI_AM335x_BeagleBone_Green_Wireless)
-					if [ -f /usr/local/lib/node_modules/node-red-node-beaglebone/.bbgw-dont-load ] ; then
-						unset overlay
-					else
-						overlay="univ-bbgw"
-					fi
-					;;
-				esac
-			fi
-			if [ ! "x${overlay}" = "x" ] ; then
-				dtbo="${overlay}-00A0.dtbo"
-				if [ -f /lib/firmware/${dtbo} ] ; then
-					if [ -f /usr/local/bin/config-pin ] ; then
-						/usr/local/bin/config-pin overlay ${overlay} || true
-					elif [ -f /usr/bin/config-pin ] ; then
-						/usr/bin/config-pin overlay ${overlay} || true
-					fi
-				fi
-			fi
-		fi
-	fi
-fi
-#
+exit 0
diff --git a/boot/generic-startup.sh b/boot/generic-startup.sh
index 0861054..71eb5fe 100755
--- a/boot/generic-startup.sh
+++ b/boot/generic-startup.sh
@@ -119,6 +119,8 @@ if [ -f /proc/device-tree/model ] ; then
 
 	if [ -f "/opt/scripts/boot/${script}" ] ; then
 		echo "generic-board-startup: [startup script=/opt/scripts/boot/${script}]"
-		/bin/sh /opt/scripts/boot/${script}
+		/bin/sh /opt/scripts/boot/${script} || true
 	fi
 fi
+
+exit 0
-- 
2.7.4

