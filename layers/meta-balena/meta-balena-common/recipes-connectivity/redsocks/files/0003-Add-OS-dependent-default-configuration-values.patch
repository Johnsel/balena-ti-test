From 6e10a35b07b7af00d579f9df693e2d4444f62a51 Mon Sep 17 00:00:00 2001
From: Andrei Gherzan <andrei@resin.io>
Date: Fri, 20 Apr 2018 13:06:14 +0100
Subject: [PATCH] Add OS dependent default configuration values

Make sure this patch matches the resin-proxy-config script which sets up the
iptables rules.

Signed-off-by: Andrei Gherzan <andrei@resin.io>
Upstream-Status: Inappropiate [Configuration]
---
 base.c     |  6 ++++++
 dnsu2t.c   | 20 +++++++++++++++++---
 redsocks.c | 13 ++++++++++++-
 3 files changed, 35 insertions(+), 4 deletions(-)

diff --git a/base.c b/base.c
index 210ddb5..9acf365 100644
--- a/base.c
+++ b/base.c
@@ -336,6 +336,12 @@ static int base_onenter(parser_section *section)

 static int base_onexit(parser_section *section)
 {
+	// Force some values that the OS depends on
+	if (instance.daemon) {
+		log_error(LOG_WARNING, "Overwriting `daemon` entry: it needs to match the systemd service configuration.\n");
+		instance.daemon = false;
+	}
+
 	if (!instance.max_accept_backoff_ms) {
 		parser_error(section->context, "`max_accept_backoff` must be positive, 0 ms is too low");
 		return -1;
diff --git a/dnsu2t.c b/dnsu2t.c
index bae4a45..6b02d1c 100644
--- a/dnsu2t.c
+++ b/dnsu2t.c
@@ -336,10 +336,10 @@ static int dnsu2t_onenter(parser_section *section)

 	INIT_LIST_HEAD(&instance->list);
 	instance->config.bindaddr.sin_family = AF_INET;
-	instance->config.bindaddr.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
-	instance->config.bindaddr.sin_port = htons(53);;
+	instance->config.bindaddr.sin_addr.s_addr = inet_addr("10.114.103.1");
+	instance->config.bindaddr.sin_port = 5313;
 	instance->config.relayaddr.sin_family = AF_INET;
-	instance->config.relayaddr.sin_port = htons(53);
+	instance->config.relayaddr.sin_port = 53;
 	instance->config.relay_timeout = 30;
 	instance->config.inflight_max = 16;

@@ -367,6 +367,20 @@ static int dnsu2t_onexit(parser_section *section)
 	instance->config.bindaddr.sin_port = htons(instance->config.bindaddr.sin_port);
 	instance->config.relayaddr.sin_port = htons(instance->config.relayaddr.sin_port);

+	// Force some values that the OS depends on
+	if (instance->config.bindaddr.sin_addr.s_addr != inet_addr("10.114.103.1")) {
+		log_error(LOG_WARNING, "Overwriting `dnsu2t:local_ip` entry: it needs to match OS' iptables configuration.\n");
+		instance->config.bindaddr.sin_addr.s_addr = inet_addr("10.114.103.1");
+	}
+	if (instance->config.bindaddr.sin_port != htons(5313)) {
+		log_error(LOG_WARNING, "Overwriting `dnsu2t:local_port` entry: it needs to match OS' iptables configuration.\n");
+		instance->config.bindaddr.sin_port = htons(5313);
+	}
+	if (instance->config.relayaddr.sin_port != htons(53)) {
+		log_error(LOG_WARNING, "Overwriting `dnsu2t:remote_port` entry: it needs to match OS' iptables configuration.\n");
+		instance->config.relayaddr.sin_port = htons(53);
+	}
+
 	list_add(&instance->list, &instances);

 	return 0;
diff --git a/redsocks.c b/redsocks.c
index 9d56f42..38c8f14 100644
--- a/redsocks.c
+++ b/redsocks.c
@@ -127,7 +127,8 @@ static int redsocks_onenter(parser_section *section)
 	INIT_LIST_HEAD(&instance->list);
 	INIT_LIST_HEAD(&instance->clients);
 	instance->config.bindaddr.sin_family = AF_INET;
-	instance->config.bindaddr.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
+	instance->config.bindaddr.sin_addr.s_addr = inet_addr("10.114.103.1");
+	instance->config.bindaddr.sin_port = 12345;
 	instance->config.relayaddr.sin_family = AF_INET;
 	instance->config.relayaddr.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
 	/* Default value can be checked in run-time, but I doubt anyone needs that.
@@ -171,6 +172,16 @@ static int redsocks_onexit(parser_section *section)
 	instance->config.bindaddr.sin_port = htons(instance->config.bindaddr.sin_port);
 	instance->config.relayaddr.sin_port = htons(instance->config.relayaddr.sin_port);

+	// Force some values that the OS depends on
+	if (instance->config.bindaddr.sin_addr.s_addr != inet_addr("10.114.103.1")) {
+		log_error(LOG_WARNING, "Overwriting `redsocks:local_ip` entry: it needs to match OS' iptables configuration.\n");
+		instance->config.bindaddr.sin_addr.s_addr = inet_addr("10.114.103.1");
+	}
+	if (instance->config.bindaddr.sin_port != htons(12345)) {
+		log_error(LOG_WARNING, "Overwriting `redsocks:local_port` entry: it needs to match OS' iptables configuration.\n");
+		instance->config.bindaddr.sin_port = htons(12345);
+	}
+
 	if (instance->config.type) {
 		relay_subsys **ss;
 		FOREACH(ss, relay_subsystems) {
--
2.7.4

